#!/bin/bash
function checkGroupOneMember
{
    NUM_CANDIDATE=3

    echo " [RUN] check cluster with only one member"
    seqs=$(awk '{if($6==1) print $7;}' $CLUSTER_FILE|tr ',' ' ')
	
    for seq in ${seqs[@]}
    do
	echo "	[WARNING] cluster with one seq: $seq"
	cans=$(grep $seq $SIMILARITY_FILE |sort -g -k3 -r|awk '{
	if($1 != "'$seq'") print $1;
	if($2 != "'$seq'") print $2;}'|head -n$NUM_CANDIDATE)
	for can in ${cans[@]}
	do
		check_num=$(grep $can $CLUSTER_FILE|awk '{print $6}')
		if [ "$check_num" != "" ] && (( $check_num >= 1 ))
		then
			echo "		add to group of: $can"
			list=$(grep $can $CLUSTER_FILE|awk '{print $7}')
			newNum=$(echo $check_num+1|bc)
			sed -i "/$seq/d" $CLUSTER_FILE
			perl -pi -e "s/$check_num\t$list/$newNum\t$list$seq,/" $CLUSTER_FILE
			break
		fi
	done
    done
}

######seting######
CLUSTER_DIC=$1

SEQ_TMP="$CLUSTER_DIC/seq.tmp"
CLUSTER_FILE="$CLUSTER_DIC/cluster.txt"
CLUSTER_VS_SPECIES_TABLE="$CLUSTER_DIC/clusterTable.csv"
SIMILARITY_FILE="pairwiseSim.tmp"

HCLUSTER_CMD="hcluster_sg"
BLAST_CMD="blastpgp"
FORMATDB_CMD="formatdb"
CLUSTER2TABLE_CMD="summary_cluster.pl"
SPLIT_CMD="splitFasta2singleSeq.pl"

BLAST_THE="1e-3"
MIN_EDGE_WEIGHT=5
#########################################

#preprocessing
[ ! -d $CLUSTER_DIC ] && mkdir $CLUSTER_DIC
cp $2 $SEQ_TMP

####generate similarity between seqs by blast evalue####
#formatdb for blastpgp
if [ ! -e $SIMILARITY_FILE ]
then
  echo " [RUN] formatdb $SEQ_TMP"
  $FORMATDB_CMD -i $SEQ_TMP
  echo " [RUN] calculate sequence similarity by BLASTPGP"
  $SPLIT_CMD $SEQ_TMP
  ls tmp*.fasta|while read file
  do
    echo "	process:$file"
    $BLAST_CMD -j 1 -h $BLAST_THE -e $BLAST_THE -d $SEQ_TMP -i $file -m 8|awk '{
	    if($11<1e-199)
		    sim=100;
	    else
		    sim=(-log($11)/log(10))/2+0.5;
	    printf("%s\t%s\t%d\n",$1,$2,sim)
    }' >> $SIMILARITY_FILE
  done
fi
#########################################################

#cluster sequences by HCluster
#	-w NUM     minimum edge weight [20]
#	-m NUM     maximum size [500]
echo " [RUN] HCluster"
SPECIES_NUM=$(grep ">" $SEQ_TMP|awk -F_ '{print $NF}'|sort|uniq|wc -l)
# $HCLUSTER_CMD -w $MIN_EDGE_WEIGHT -m $SPECIES_NUM $SIMILARITY_FILE -o $CLUSTER_FILE
$HCLUSTER_CMD -m $SPECIES_NUM $SIMILARITY_FILE -o $CLUSTER_FILE
if [ -e $CLUSTER_FILE ]
then
        checkGroupOneMember
	echo "  [INF] # of clusters= "$(wc -l $CLUSTER_FILE|awk '{print $1}')
else
	echo "  [ERROR] no $CLUSTER_FILE, failed in HCluster"
	exit
fi

#create group vs species table for analysis
$CLUSTER2TABLE_CMD $CLUSTER_FILE > $CLUSTER_VS_SPECIES_TABLE

#####CLEAR STEP#####
rm $SIMILARITY_FILE $SEQ_TMP* tmp*.fasta formatdb.log
